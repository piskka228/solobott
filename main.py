import discord
from discord import app_commands
from discord.ext import tasks
from flask import Flask
from threading import Thread
import asyncio
import os
import json
import random
import string

# ------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ -------------

# –ò–Ω—Ç–µ–Ω—Ç—ã: –Ω—É–∂–Ω—ã –¥–ª—è —Å–ª–µ–∂–µ–Ω–∏—è –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∏ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Å–æ–æ–±—â–µ–Ω–∏–π
intents = discord.Intents.default()
intents.members = True
intents.message_content = True
intents.guilds = True

# –ö–ª–∏–µ–Ω—Ç –∏ –¥–µ—Ä–µ–≤o –∫–æ–º–∞–Ω–¥
bot = discord.Client(intents=intents)
tree = app_commands.CommandTree(bot)

# ID —Å–µ—Ä–≤–µ—Ä–∞ SOLO
GUILD_ID = 1374663288134307891
GUILD = discord.Object(id=GUILD_ID)

# –ö–∞–Ω–∞–ª—ã
ALLIANCE_CHANNEL_ID = 1378520564066685001
STAFF_CHANNEL_ID = 1378524871117766766
PING_CHANNEL_ID = 1378925142738075688
VERIF_CATEGORY_ID = 1378925066779099317

# –†–æ–ª–∏
ROLE_UNVERIFIED = 1375697204223676477
ROLE_VERIFIED_1 = 1375082315365093498
ROLE_VERIFIED_2 = 1375696805945282591

# –†–∞–Ω–≥–∏ —Å—Ç–∞—Ñ—Ñ–∞ –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
STAFF_RANKS = ['–æ–≤–Ω–µ—Ä', '—Å–æ-–æ–≤–Ω–µ—Ä', '–∞–¥–º–∏–Ω', '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä', '–∏–Ω–≤–∞–π—Ç–µ—Ä']

# –¶–≤–µ—Ç —á—ë—Ä–Ω—ã–π
COLOR_BLACK = 0x000000

# –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
ALLIANCE_FILE = "alliances.json"
STAFF_FILE = "staff.json"

# –°–∏–º–≤–æ–ª—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ (–±—É–∫–≤—ã + —Ü–∏—Ñ—Ä—ã)
CHAR_POOL = string.ascii_letters + string.digits

# ------------- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã -------------

# –î–∞–Ω–Ω—ã–µ –∞–ª—å—è–Ω—Å–æ–≤: { ¬´—Ç–µ–≥¬ª: { "description": ..., "contact": ... } }
alliance_data: dict[str, dict[str, str]] = {}

# –î–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ñ—Ñ–∞: { ¬´—Ä–∞–Ω–≥¬ª: [ "–Ω–∏–∫1", "–Ω–∏–∫2", ... ] }
staff_data: dict[str, list[str]] = {rank: [] for rank in STAFF_RANKS}

# –°–æ–æ–±—â–µ–Ω–∏—è-embed (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
alliance_message: discord.Message | None = None
staff_message: discord.Message | None = None

# –û–∂–∏–¥–∞—é—â–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é: 
# { member_id: { "channel_id": int, "code": str, "attempts": int } }
pending_verifications: dict[int, dict[str, object]] = {}


# ------------- –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è JSON -------------

def load_alliances():
    global alliance_data
    try:
        with open(ALLIANCE_FILE, "r", encoding="utf-8") as f:
            alliance_data = json.load(f)
    except FileNotFoundError:
        alliance_data = {}
    except json.JSONDecodeError:
        alliance_data = {}

def save_alliances():
    with open(ALLIANCE_FILE, "w", encoding="utf-8") as f:
        json.dump(alliance_data, f, ensure_ascii=False, indent=2)

def load_staff():
    global staff_data
    try:
        with open(STAFF_FILE, "r", encoding="utf-8") as f:
            staff_data = json.load(f)
            # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ —Ä–∞–Ω–≥–∏ –µ—Å—Ç—å
            for rank in STAFF_RANKS:
                staff_data.setdefault(rank, [])
    except FileNotFoundError:
        staff_data = {rank: [] for rank in STAFF_RANKS}
    except json.JSONDecodeError:
        staff_data = {rank: [] for rank in STAFF_RANKS}

def save_staff():
    with open(STAFF_FILE, "w", encoding="utf-8") as f:
        json.dump(staff_data, f, ensure_ascii=False, indent=2)


# ------------- Embed-—Å—Ç—Ä–æ–∏—Ç–µ–ª–∏ -------------
def make_alliance_embed() -> discord.Embed:
    embed = discord.Embed(
        title="üè∞ –ê–ª—å—è–Ω—Å—ã –∫–ª–∞–Ω–∞ SOLO",
        description="–ó–¥–µ—Å—å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –≤—Å–µ –∞–ª—å—è–Ω—Å—ã. (–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –∫–æ–º–∞–Ω–¥–∞–º–∏)",
        color=COLOR_BLACK
    )
    if not alliance_data:
        embed.add_field(name="‚Äî", value="–ê–ª—å—è–Ω—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.", inline=False)
    else:
        for tag, info in alliance_data.items():
            contact_mention = f"<@{info['contact']}>"
            desc = f"{info['description']}\n**–ö–æ–Ω—Ç–∞–∫—Ç:** {contact_mention}"
            embed.add_field(name=f"üîñ {tag}", value=desc, inline=False)
    embed.set_footer(text="–ö–ª–∞–Ω SOLO | –ê–ª—å—è–Ω—Å—ã")
    return embed

def make_staff_embed() -> discord.Embed:
    embed = discord.Embed(
        title="üë• –°—Ç–∞—Ñ—Ñ –∫–ª–∞–Ω–∞ SOLO",
        description="–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å—Ç–∞—Ñ—Ñ–∞ –ø–æ —Ä–∞–Ω–≥–∞–º.",
        color=COLOR_BLACK
    )
    for rank in STAFF_RANKS:
        members = staff_data.get(rank, [])
        value = "\n".join(f"‚Ä¢ {m}" for m in members) if members else "‚Äî"
        embed.add_field(name=rank.capitalize(), value=value, inline=False)
    embed.set_footer(text="–ö–ª–∞–Ω SOLO | –°—Ç–∞—Ñ—Ñ")
    return embed


# ------------- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ embed-—Å–æ–æ–±—â–µ–Ω–∏–π -------------

async def update_alliance_message():
    global alliance_message
    channel = bot.get_channel(ALLIANCE_CHANNEL_ID)
    if channel is None:
        return
    embed = make_alliance_embed()
    if alliance_message:
        try:
            await alliance_message.edit(embed=embed)
        except discord.NotFound:
            alliance_message = await channel.send(embed=embed)
    else:
        alliance_message = await channel.send(embed=embed)

async def update_staff_message():
    global staff_message
    channel = bot.get_channel(STAFF_CHANNEL_ID)
    if channel is None:
        return
    embed = make_staff_embed()
    if staff_message:
        try:
            await staff_message.edit(embed=embed)
        except discord.NotFound:
            staff_message = await channel.send(embed=embed)
    else:
        staff_message = await channel.send(embed=embed)

async def init_messages():
    # –î–∞–¥–∏–º –±–æ—Ç—É –≤—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∫–∞–Ω–∞–ª—ã
    await asyncio.sleep(5)
    await update_alliance_message()
    await update_staff_message()


# ------------- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ -------------

def is_admin():
    async def predicate(interaction: discord.Interaction) -> bool:
        return interaction.user.guild_permissions.administrator
    return app_commands.check(predicate)


# ------------- –°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–ª—å—è–Ω—Å–æ–≤ -------------

# –£–±–∏—Ä–∞–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π @bot.slash_command –∏ –¥–µ–ª–∞–µ–º —Ç–∞–∫:

@tree.command(
    name="–¥–æ–±–∞–≤–∏—Ç—å_–∞–ª—å—è–Ω—Å",
    description="–î–æ–±–∞–≤–∏—Ç—å –∞–ª—å—è–Ω—Å (—Ç–µ–≥, –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ–Ω—Ç–∞–∫—Ç ID)",
    guild=GUILD
)
@app_commands.describe(
    —Ç–µ–≥="–¢–µ–≥ –∞–ª—å—è–Ω—Å–∞ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)",
    –æ–ø–∏—Å–∞–Ω–∏–µ="–û–ø–∏—Å–∞–Ω–∏–µ –∞–ª—å—è–Ω—Å–∞",
    –∫–æ–Ω—Ç–∞–∫—Ç="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @"
)
@app_commands.checks.has_permissions(administrator=True)
async def –¥–æ–±–∞–≤–∏—Ç—å_–∞–ª—å—è–Ω—Å(
    interaction: discord.Interaction,
    —Ç–µ–≥: str,
    –æ–ø–∏—Å–∞–Ω–∏–µ: str,
    –∫–æ–Ω—Ç–∞–∫—Ç: str
):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç ‚Äî —ç—Ç–æ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    if not –∫–æ–Ω—Ç–∞–∫—Ç.isdigit():
        await interaction.response.send_message(
            "‚ùå –£–∫–∞–∂–∏ **—Ç–æ–ª—å–∫–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**, –±–µ–∑ @.", ephemeral=True
        )
        return

    emoji = "üè∞"
    mention = f"<@{–∫–æ–Ω—Ç–∞–∫—Ç}>"
    alliance_data[—Ç–µ–≥] = {
        "description": –æ–ø–∏—Å–∞–Ω–∏–µ,
        "contact": –∫–æ–Ω—Ç–∞–∫—Ç
    }
    save_alliances()
    await update_alliance_message()
    await interaction.response.send_message(f"‚úÖ –ê–ª—å—è–Ω—Å `{—Ç–µ–≥}` –¥–æ–±–∞–≤–ª–µ–Ω.", ephemeral=True)


@tree.command(
    name="—É–¥–∞–ª–∏—Ç—å_–∞–ª—å—è–Ω—Å",
    description="–£–¥–∞–ª–∏—Ç—å –∞–ª—å—è–Ω—Å –ø–æ —Ç–µ–≥—É",
    guild=GUILD
)
@app_commands.describe(
    —Ç–µ–≥="–¢–µ–≥ –∞–ª—å—è–Ω—Å–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
)
@app_commands.checks.has_permissions(administrator=True)
async def —É–¥–∞–ª–∏—Ç—å_–∞–ª—å—è–Ω—Å(
    interaction: discord.Interaction,
    —Ç–µ–≥: str
):
    if —Ç–µ–≥ in alliance_data:
        del alliance_data[—Ç–µ–≥]
        save_alliances()
        await update_alliance_message()
        await interaction.response.send_message("‚ùå –ê–ª—å—è–Ω—Å —É–¥–∞–ª—ë–Ω.", ephemeral=True)
    else:
        await interaction.response.send_message("üö´ –ê–ª—å—è–Ω—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)


# ------------- –°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å—Ç–∞—Ñ—Ñ–∞ -------------
@tree.command(
    name="–¥–æ–±–∞–≤–∏—Ç—å_—Å—Ç–∞—Ñ—Ñ",
    description="–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ñ—Ñ (—Ä–∞–Ω–≥: –æ–≤–Ω–µ—Ä, —Å–æ-–æ–≤–Ω–µ—Ä, –∞–¥–º–∏–Ω, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –∏–Ω–≤–∞–π—Ç–µ—Ä)",
    guild=GUILD
)
@app_commands.describe(
    –Ω–∏–∫="–ù–∏–∫ —Å—Ç–∞—Ñ—Ñ–∞",
    —Ä–∞–Ω–≥="–†–∞–Ω–≥ —Å—Ç–∞—Ñ—Ñ–∞"
)
@app_commands.checks.has_permissions(administrator=True)
async def –¥–æ–±–∞–≤–∏—Ç—å_—Å—Ç–∞—Ñ—Ñ(
    interaction: discord.Interaction,
    –Ω–∏–∫: str,
    —Ä–∞–Ω–≥: str
):
    —Ä–∞–Ω–≥_lower = —Ä–∞–Ω–≥.lower()
    if —Ä–∞–Ω–≥_lower not in STAFF_RANKS:
        await interaction.response.send_message(
            f"üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞–Ω–≥. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑: {', '.join(STAFF_RANKS)}.", 
            ephemeral=True
        )
        return

    if –Ω–∏–∫ in staff_data[—Ä–∞–Ω–≥_lower]:
        await interaction.response.send_message("‚ö†Ô∏è –≠—Ç–æ—Ç –Ω–∏–∫ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ.", ephemeral=True)
        return

    staff_data[—Ä–∞–Ω–≥_lower].append(–Ω–∏–∫)
    save_staff()
    await update_staff_message()
    await interaction.response.send_message("‚úÖ –°—Ç–∞—Ñ—Ñ –¥–æ–±–∞–≤–ª–µ–Ω.", ephemeral=True)

@tree.command(
    name="—É–¥–∞–ª–∏—Ç—å_—Å—Ç–∞—Ñ—Ñ",
    description="–£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ñ—Ñ–∞ –ø–æ –Ω–∏–∫—É",
    guild=GUILD
)
@app_commands.describe(
    –Ω–∏–∫="–ù–∏–∫ —Å—Ç–∞—Ñ—Ñ–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
)
@app_commands.checks.has_permissions(administrator=True)
async def —É–¥–∞–ª–∏—Ç—å_—Å—Ç–∞—Ñ—Ñ(
    interaction: discord.Interaction,
    –Ω–∏–∫: str
):
    found = False
    for rank in STAFF_RANKS:
        if –Ω–∏–∫ in staff_data.get(rank, []):
            staff_data[rank].remove(–Ω–∏–∫)
            found = True
            break
    if found:
        save_staff()
        await update_staff_message()
        await interaction.response.send_message("‚ùå –°—Ç–∞—Ñ—Ñ —É–¥–∞–ª—ë–Ω.", ephemeral=True)
    else:
        await interaction.response.send_message("üö´ –°—Ç–∞—Ñ—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)


# ------------- –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–∏ –≤—Ö–æ–¥–µ -------------

@bot.event
async def on_member_join(member: discord.Member):
    if member.guild.id != GUILD_ID:
        return

    # –í—ã–¥–∞—Ç—å —Ä–æ–ª—å "–Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
    try:
        await member.add_roles(discord.Object(id=ROLE_UNVERIFIED))
    except:
        pass

    # –ü–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª–µ, –∑–∞—Ç–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
    ping_channel = bot.get_channel(PING_CHANNEL_ID)
    if ping_channel:
        msg = await ping_channel.send(f"{member.mention} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.")
        # –£–¥–∞–ª—è–µ–º —Å—Ä–∞–∑—É –∂–µ
        await msg.delete()

    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    category = bot.get_channel(VERIF_CATEGORY_ID)
    if not isinstance(category, discord.CategoryChannel):
        return

    overwrites = {
        member.guild.default_role: discord.PermissionOverwrite(view_channel=False),
        member: discord.PermissionOverwrite(view_channel=True, send_messages=True, read_message_history=True),
        member.guild.me: discord.PermissionOverwrite(view_channel=True)
    }
    chan_name = f"verify-{member.id}"
    verify_channel = await category.create_text_channel(
        name=chan_name,
        overwrites=overwrites,
        reason="–ö–∞–Ω–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
    )
    # –í–∫–ª—é—á–∞–µ–º –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º 5 —Å–µ–∫—É–Ω–¥
    await verify_channel.edit(slowmode_delay=5)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –∏–∑ 60 —Å–∏–º–≤–æ–ª–æ–≤
    code = ''.join(random.choice(CHAR_POOL) for _ in range(60))
    pending_verifications[member.id] = {
        "channel_id": verify_channel.id,
        "code": code,
        "attempts": 0
    }

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    embed = discord.Embed(
        title="üõ°Ô∏è –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞",
        description=(
            f"{member.mention}, —Ç–µ–±–µ –æ—Ç–∫—Ä—ã—Ç **–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª** –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.\n\n"
            f"–í–≤–µ–¥–∏ —ç—Ç–æ—Ç –∫–æ–¥ **—Ç–æ—á–Ω–æ** –∫–∞–∫ –æ–Ω –µ—Å—Ç—å:\n```{code}```\n\n"
            f"‚ùó –£ —Ç–µ–±—è **5 –ø–æ–ø—ã—Ç–æ–∫**. –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è ‚Äî –±–æ—Ç —É–¥–∞–ª–∏—Ç –∫–∞–Ω–∞–ª –∏ —Å–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–π —Å –¥—Ä—É–≥–∏–º –∫–æ–¥–æ–º."
        ),
        color=COLOR_BLACK
    )
    embed.set_footer(text="SOLO | –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è")
    await verify_channel.send(embed=embed)
    @bot.event
    async def on_message(message: discord.Message):
        # –ù–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –±–æ—Ç–∞ —Å–∞–º–æ–≥–æ
        if message.author.bot:
            return

        # -------- –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã (–≤–∫–ª—é—á–∞—è "–Ω–µ–∞–∫—Ç–∏–≤" –∏ "–ø—Ä–∏–≤–µ—Ç") --------
        if message.guild and message.guild.id == GUILD_ID:
            content = message.content.lower()
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫
            if "–Ω–µ–∞–∫—Ç–∏–≤" in content:
                await message.channel.send("—Ç–∞–∫ –∑–∞–π–¥–∏ –≤ –∏–≥—Ä—É —Ñ—Ä–∏–∫‚ù§Ô∏è")
            elif "–ø—Ä–∏–≤–µ—Ç" in content:
                await message.channel.send("–ü—Ä–∏–≤–µ—Ç!")
            elif content == "—Å–≤–∞–≥–∞?":
                await message.channel.send("–ò–º–µ–µ—Ç—Å—è‚úÖ")
            elif content == "–¥—Ä–µ–π–∫":
                await message.channel.send("–ù–µ—Ç, –¥–∏–æ–≥–µ–Ωüò°")
            elif content == "–∏–≤–∞–Ω–æ–≤–æ":
                await message.channel.send("–î–µ—Ä–µ–≤–Ω—èüåö")

        # -------- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ --------
        author_id = message.author.id
        if author_id in pending_verifications:
            state = pending_verifications[author_id]
            chan_id = state["channel_id"]
            if message.channel.id == chan_id:
                code_correct = state["code"]
                if message.content.strip() == code_correct:
                    # –£—Å–ø–µ—à–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
                    member = message.author
                    # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ä–æ–ª—å
                    try:
                        await member.remove_roles(discord.Object(id=ROLE_UNVERIFIED))
                    except:
                        pass
                    # –í—ã–¥–∞–µ–º —Ä–æ–ª–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
                    try:
                        await member.add_roles(discord.Object(id=ROLE_VERIFIED_1))
                        await member.add_roles(discord.Object(id=ROLE_VERIFIED_2))
                    except:
                        pass
                    # –£–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
                    try:
                        chan = bot.get_channel(chan_id)
                        if chan:
                            await chan.delete()
                    except:
                        pass
                    # –£–¥–∞–ª—è–µ–º –∏–∑ –æ–∂–∏–¥–∞–Ω–∏—è
                    del pending_verifications[author_id]
                    return


            else:
                # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥
                state["attempts"] += 1
                if state["attempts"] >= 5:
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–∞–Ω–∞–ª
                    old_chan = bot.get_channel(chan_id)
                    try:
                        if old_chan:
                            await old_chan.delete()
                    except:
                        pass
                    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –∏ –Ω–æ–≤—ã–π –∫–æ–¥
                    member = message.author
                    category = bot.get_channel(VERIF_CATEGORY_ID)
                    if isinstance(category, discord.CategoryChannel):
                        overwrites = {
                            member.guild.default_role: discord.PermissionOverwrite(view_channel=False),
                            member: discord.PermissionOverwrite(view_channel=True, send_messages=True, read_message_history=True),
                            member.guild.me: discord.PermissionOverwrite(view_channel=True)
                        }
                        chan_name = f"verify-{member.id}"
                        verify_channel = await category.create_text_channel(
                            name=chan_name,
                            overwrites=overwrites,
                            reason="–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"
                        )
                        await verify_channel.edit(slowmode_delay=5)
                        # –ù–æ–≤—ã–π –∫–æ–¥
                        new_code = ''.join(random.choice(CHAR_POOL) for _ in range(60))
                        pending_verifications[author_id] = {"channel_id": verify_channel.id, "code": new_code, "attempts": 0}
                        await verify_channel.send(
                            f"{member.mention} –í–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ 5 —Ä–∞–∑. –í–æ—Ç –Ω–æ–≤—ã–π –∫–æ–¥:\n\n{new_code}```"
                        )
                else:
                    # –ï—â—ë –µ—Å—Ç—å –ø–æ–ø—ã—Ç–∫–∏
                    remaining = 5 - state["attempts"]
                    await message.channel.send(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {remaining}")
                return

    # -------- –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è) --------
    # –°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –∑–¥–µ—Å—å.


# ------------- –ò–≤–µ–Ω—Ç on_ready -------------

@bot.event
async def on_ready():
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
    load_alliances()
    load_staff()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è embed-—Å–æ–æ–±—â–µ–Ω–∏–π
    await init_messages()

    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥ —Ç–æ–ª—å–∫–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    await tree.sync(guild=GUILD)
    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}. –°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")


# ------------- Flask keep-alive –¥–ª—è Replit -------------

app = Flask("")

@app.route("/")
def home():
    return "–ë–æ—Ç SOLO —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7!"

def run():
    app.run(host="0.0.0.0", port=8080)

def keep_alive():
    server = Thread(target=run)
    server.start()

keep_alive()

# ------------- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ -------------

# –¢–æ–∫–µ–Ω —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ Secrets ‚Üí –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è TOKEN
bot.run(os.getenv("TOKEN"))